/*
 * Copyright (c) 2016, MasterCard International Incorporated and/or its
 * affiliates. All rights reserved.
 *
 * The contents of this file may only be used subject to the MasterCard
 * Mobile Payment SDK for MCBP and/or MasterCard Mobile MPP UI SDK
 * Materials License.
 *
 * Please refer to the file LICENSE.TXT for full details.
 *
 * TO THE EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
 * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON INFRINGEMENT. TO THE EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * MASTERCARD OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

package com.mastercard.mcbp.card.mpplite.mcbpv1.output;

import com.mastercard.mcbp.transactiondecisionmanager.terminal.TerminalTechnology;
import com.mastercard.mobile_api.bytes.ByteArray;

/**
 * Data utility object to store information related to the transaction logging
 */
public interface ContactlessLog {
    /**
     * Get the transaction result as enumerator {@link TransactionSummary}
     *
     * @since 1.0.3
     */
    TransactionSummary getResult();

    /**
     * Get the technology that was used to perform this transaction
     *
     * @return The Technology used for the transaction
     * @since 1.0.6a
     */
    TerminalTechnology getTerminalTechnology();

    /**
     * Get the Unpredictable number that was sent by the terminal
     *
     * @since 1.0.3
     */
    ByteArray getUnpredictableNumber();

    /**
     * Get the Application Transaction Counter used for this transaction
     *
     * @since 1.0.3
     */
    ByteArray getAtc();

    /**
     * Get the Application Cryptogram as it was generated by the MPP Lite
     *
     * @since 1.0.3
     */
    ByteArray getCryptogram();

    /**
     * Get the Transaction Date
     *
     * @since 1.0.3
     */
    ByteArray getDate();

    /**
     * Get the Transaction Amount (as approved by the application)
     *
     * @since 1.0.3
     */
    ByteArray getAmount();

    /**
     * Get the Currency Code (as specified by the terminal and used in the cryptogram generation)
     *
     * @since 1.0.6a
     */
    ByteArray getMagstripeDynamicTrack1Data();

    /**
     * Get the Currency Code (as specified by the terminal and used in the cryptogram generation)
     * <p/>
     * Note: The data is returned as Compressed Numeric 19 bytes
     *
     * @since 1.0.6a
     */
    ByteArray getMagstripeDynamicTrack2Data();

    /**
     * Get the Currency Code (as specified by the terminal and used in the cryptogram generation
     *
     * @since 1.0.3
     */
    ByteArray getCurrencyCode();


    /**
     * Clear the content of the Contactless Log
     *
     * @since 1.0.4
     */
    void wipe();
}
