buildscript {
    repositories {
        mavenCentral()
        jcenter()
        flatDir { dirs './lib' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath ':dexguard:'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'dexguard'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
           // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles getDefaultDexGuardFile('dexguard-library-release-aggressive.pro')
            proguardFile './dexguard-project.txt'
            //D:\AndroidWorkspace\New work space\Amit\30-11-2017\HceCloudReadyApp3\comviva-hce-service
        }
        debug {
            debuggable true
            minifyEnabled false
        }

    }
    productFlavors {
        mdes {
            buildConfigField "String", "RNS_MESSAGE_TAG", "\"payload\""
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

//task to delete the old jar
task deleteOldJar(type: Delete) {
    delete '..//app/libs/comvivaSdk.aar'
}

//task to export contents as jar
task buildDebugJar(type: Copy) {
    from('build/outputs/aar/')
    into('..//app//libs')
    include('comviva-hce-service-mdes-debug.aar')
    rename('comviva-hce-service-mdes-debug.aar', 'comvivaSdk.aar')
}

//task to export contents as jar
task buildReleaseJar(type: Copy) {
    from('build/outputs/aar/')
    into('..//app//libs')
    include('comviva-hce-service-mdes-release.aar')
    rename('comviva-hce-service-mdes-release.aar', 'comvivaSdk.aar')
}

buildDebugJar.dependsOn(deleteOldJar, build)
buildReleaseJar.dependsOn(deleteOldJar, build)

allprojects {
    repositories {
        mavenCentral()
        flatDir { dirs 'libs' } // this line
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile('net.sf.flexjson:flexjson:3.2') {
        transitive = true
    }
    testCompile 'junit:junit:4.12'
    compile 'com.google.firebase:firebase-core:10.0.1'
    compile 'com.google.firebase:firebase-messaging:10.0.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'commons-codec:commons-codec:1.10'
    compile files('libs/VTS-SDK-5.1.1.jar')
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile files('libs/dexguard-runtime .jar')
    compile files('libs/sample-native-crypto-2.3.0-release.jar')
    compile files('libs/sample-android-crypto-2.3.0-release.jar')
    compile files('libs/mchipengine-2.3.0-debug.jar')
    compile files('libs/mpsdk-2.3.0-debug.jar')
    compile files('libs/sample-android-crypto-2.3.0-debug.jar')
    compile files('libs/mchipengine-2.3.0-release.jar')
    compile files('libs/mpsdk-2.3.0-release.jar')
    compile files('libs/dexguard-runtime.jar')
}




